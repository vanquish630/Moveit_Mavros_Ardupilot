<launch>
    
    <arg name="gui" default="false" />
    <arg name="debug" default="false" />
    <arg name="output" default="screen" />
    <arg name="frame_id"  default="map"/>
    <arg name="point_cloud_topic"  default="/depth_camera/depth/points"/>
    <arg name="octomap_resolution" default="0.15"/>
    <arg name="start_octomap_server" default="true"/>
    <arg name="visualize" default="true" />
    <arg name="use_local_planning" default="false" />

    <!-- Launch PX4 Moveit -->
    <include file="$(find mavros_moveit)/launch/mavros_gazebo.launch">
    </include>

    <include file="$(find mavros_moveit)/launch/mavros_moveit.launch">
        <arg name="octomap_resolution" value="$(arg octomap_resolution)"/>
    </include>

    <!-- <node pkg="tf" type="static_transform_publisher" name="camera_link_broadcaster_0" args="0 0 0 -1.57 0 -1.57 base_link /camera_link 100" /> -->
    <node pkg="tf" type="static_transform_publisher" name="base_map" args="0 0 0 0 0 0 map base_link 10" />
    
    <node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan">
        <param name="output_frame_id" value="base_link" />
        <remap from="image" to="/depth_camera/depth/image_raw" />
        <remap from="scan" to="/laser/scan" />
    </node>

    <!-- Start gmapping for map creation -->
    <!--<include file="$(find mavros_moveit_avoidance)/launch/mavros_gmapping.launch"/>-->
    <node name="launch_gmapping" pkg="mavros_moveit_avoidance" type="launch_gmapping"/>

    <!-- OctoMap Server -->
    <node pkg="octomap_server" type="octomap_server_node" name="octomap_server" if="$(eval start_octomap_server == true)">
        <param name="resolution" value="$(arg octomap_resolution)" />
        <!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
        <param name="frame_id" type="string" value="$(arg frame_id)" />
        <!-- maximum range to integrate (speedup!) -->
        <param name="sensor_model/max_range" value="9.0" />
        <param name="sensor_model/min" value="0.01" />
        <param name="sensor_model/max" value="0.99" />
        <param name="sensor_model/hit" value="0.9" />
        <param name="sensor_model/miss" value="0.45" />
        <param name="color/r" value="0.1" />
        <param name="color/g" value="0.1" />
        <param name="color/b" value="0.1" />
        <param name="color/a" value="1.0" />
        <!-- Filter out obstacles which are lower than 1 meter -->
        <param name="occupancy_min_z" value="0.0" />
        <param name="height_map" value="false" />
        <param name="publish_free_space" value="true" />
        <!-- data source to integrate (PointCloud2) -->
        <remap from="cloud_in" to="$(arg point_cloud_topic)" />
    </node>

    <group if="$(arg use_local_planning)">
        <arg name="octomap_topic" default="/octomap_binary"/>
        <arg name="hist_resolution" default="0.087222222" />
        <arg name="max_plan_range" default="3.0" />
        <arg name="const_a" default="10.0" />

        <!-- Start the vfh3d node -->
        <include file="$(find vfh3d)/launch/vfh3d_planner.launch">
            <arg name="octomap_topic" value="$(arg octomap_topic)" />
            <arg name="hist_resolution" value="$(arg hist_resolution)" />
            <arg name="map_resolution" value="$(arg octomap_resolution)" />
            <arg name="max_plan_range" value="$(arg max_plan_range)" />
            <arg name="const_a" value="$(arg const_a)" />
        </include>
    </group>
</launch>